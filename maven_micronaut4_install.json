{
  "__AUTOGENERATED_FILE_DO_NOT_MODIFY_THIS_FILE_MANUALLY": "THERE_IS_NO_DATA_ONLY_ZUUL",
  "__INPUT_ARTIFACTS_HASH": 275462268,
  "__RESOLVED_ARTIFACTS_HASH": -979438573,
  "conflict_resolution": {
    "jakarta.inject:jakarta.inject-api:2.0.0": "jakarta.inject:jakarta.inject-api:2.0.1"
  },
  "artifacts": {
    "com.github.javaparser:javaparser-core": {
      "shasums": {
        "jar": "3ac2c42a234c1ee43a55bc22911934ddd537bba78931265d072ed34c22b06d96"
      },
      "version": "3.25.8"
    },
    "com.github.javaparser:javaparser-symbol-solver-core": {
      "shasums": {
        "jar": "8d2484cd70a62ee5e32f09c7305d7c13d54e09235427b4531a94cfb3e8989550"
      },
      "version": "3.25.8"
    },
    "com.google.devtools.ksp:symbol-processing-api": {
      "shasums": {
        "jar": "fbc89c6e8fb5b9e4e1574afcd96085d0c1d653171e7ca48183867a5d5613c88e"
      },
      "version": "1.9.22-1.0.16"
    },
    "io.micronaut:micronaut-aop": {
      "shasums": {
        "jar": "7d89dd056db2c0a0a8ba6bccfdba8d84c9dd2b7c07321a7d73a58a0778af37d8"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-context": {
      "shasums": {
        "jar": "2db66e931d2422555dae093a61f84ed20874a3ccfe67e56a70a98113489a09e4"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-context-propagation": {
      "shasums": {
        "jar": "6b970f88f0a03b66220ab8cce33016c96b2e7cb32a247f18c6f47809ea96afe1"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-core": {
      "shasums": {
        "jar": "816e421f3fc13d1ae29586bdcbf0938622e557f3d735b71ca080f8fae80f8476"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-core-processor": {
      "shasums": {
        "jar": "60aa08b77833b9c2821cf7f503c5de1e1885dbc877ddfd81f548d98d0d08aba2"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-core-reactive": {
      "shasums": {
        "jar": "8952028e6cd64b45c3079d00b743d91291999557b0f35bf8516e7eee0d7d2148"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-discovery-core": {
      "shasums": {
        "jar": "dc40cfb227d51df4a55c05e60fc36c7727364cfa65c271c4ef1789418bb30302"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-http": {
      "shasums": {
        "jar": "d79e2e7da53d9c05c4061a9b0333e866e61bcf29b2fbcf853991452460d60884"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-inject": {
      "shasums": {
        "jar": "ba55abd82665e1b00539d92f547c8205e9b4c1e5a1b5ed75c8ab8b7c10e55a84"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-inject-kotlin": {
      "shasums": {
        "jar": "cdfe6b91ce93b18428bb01f0beedc703afdcfc48f3d96d7f69e0688c757df044"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-retry": {
      "shasums": {
        "jar": "4537845a2df72cd9c34f22339377a0f9665f134de295760e1d4617e06da5f53b"
      },
      "version": "4.3.0"
    },
    "io.micronaut:micronaut-runtime": {
      "shasums": {
        "jar": "1b1fb54b2011ce27c8af976ca0acaf170804506650766993387584437daf7033"
      },
      "version": "4.3.0"
    },
    "io.projectreactor:reactor-core": {
      "shasums": {
        "jar": "4085e9236b11d8c2d72b3dc740f125e3231f18b6c4044e1518b3bd5e8f8e40c7"
      },
      "version": "3.5.11"
    },
    "jakarta.annotation:jakarta.annotation-api": {
      "shasums": {
        "jar": "5f65fdaf424eee2b55e1d882ba9bb376be93fb09b37b808be6e22e8851c909fe"
      },
      "version": "2.1.1"
    },
    "jakarta.inject:jakarta.inject-api": {
      "shasums": {
        "jar": "f7dc98062fccf14126abb751b64fab12c312566e8cbdc8483598bffcea93af7c"
      },
      "version": "2.0.1"
    },
    "jakarta.validation:jakarta.validation-api": {
      "shasums": {
        "jar": "1a18593d8ba9b48215ca4993e51a4451c804a82f89e8d0d4a31a5e6b8731d4a7"
      },
      "version": "3.1.0"
    },
    "org.jetbrains.kotlin:kotlin-stdlib": {
      "shasums": {
        "jar": "35aeffbe2db5aa446072cee50fcee48b7fa9e2fc51ca37c0cc7d7d0bc39d952e"
      },
      "version": "1.9.0"
    },
    "org.jetbrains.kotlin:kotlin-stdlib-common": {
      "shasums": {
        "jar": "283274204bd7c020789ec46f8f8e72af4244d7f550b3392a57e5ca006ad7aa2c"
      },
      "version": "1.9.0"
    },
    "org.jetbrains.kotlin:kotlin-stdlib-jdk7": {
      "shasums": {
        "jar": "b7979a7aac94055f0d9f1fd3b47ce5ffe1cb6032a842ba9fbe7186f085289178"
      },
      "version": "1.9.0"
    },
    "org.jetbrains.kotlin:kotlin-stdlib-jdk8": {
      "shasums": {
        "jar": "a59fa24fdf1ffb594baecdbf0fd10010f977cea10236d487fe3464977a7377fa"
      },
      "version": "1.9.0"
    },
    "org.jetbrains:annotations": {
      "shasums": {
        "jar": "ace2a10dc8e2d5fd34925ecac03e4988b2c0f851650c94b8cef49ba1bd111478"
      },
      "version": "13.0"
    },
    "org.ow2.asm:asm": {
      "shasums": {
        "jar": "3c6fac2424db3d4a853b669f4e3d1d9c3c552235e19a319673f887083c2303a1"
      },
      "version": "9.6"
    },
    "org.ow2.asm:asm-commons": {
      "shasums": {
        "jar": "7aefd0d5c0901701c69f7513feda765fb6be33af2ce7aa17c5781fc87657c511"
      },
      "version": "9.6"
    },
    "org.ow2.asm:asm-tree": {
      "shasums": {
        "jar": "c43ecf17b539c777e15da7b5b86553b377e2d39a683de6285567d5283888e7ef"
      },
      "version": "9.6"
    },
    "org.reactivestreams:reactive-streams": {
      "shasums": {
        "jar": "f75ca597789b3dac58f61857b9ac2e1034a68fa672db35055a8fb4509e325f28"
      },
      "version": "1.0.4"
    },
    "org.slf4j:slf4j-api": {
      "shasums": {
        "jar": "ce0e71d673acb9036bb55d0244b261cf033f8e4c1245f14f931dfb1937dd4c95"
      },
      "version": "2.0.11"
    }
  },
  "dependencies": {
    "com.github.javaparser:javaparser-symbol-solver-core": [
      "com.github.javaparser:javaparser-core"
    ],
    "com.google.devtools.ksp:symbol-processing-api": [
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    ],
    "io.micronaut:micronaut-aop": [
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-inject",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-context": [
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-inject",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-context-propagation": [
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-inject",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-core": [
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-core-processor": [
      "com.github.javaparser:javaparser-symbol-solver-core",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-inject",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-core-reactive": [
      "io.micronaut:micronaut-core",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-discovery-core": [
      "io.micronaut:micronaut-context",
      "io.projectreactor:reactor-core",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-http": [
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core-reactive",
      "io.projectreactor:reactor-core",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-inject": [
      "io.micronaut:micronaut-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-inject-kotlin": [
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-core-processor",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-retry": [
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-core-reactive",
      "io.projectreactor:reactor-core",
      "org.slf4j:slf4j-api"
    ],
    "io.micronaut:micronaut-runtime": [
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-retry",
      "io.projectreactor:reactor-core",
      "org.slf4j:slf4j-api"
    ],
    "io.projectreactor:reactor-core": [
      "org.reactivestreams:reactive-streams"
    ],
    "org.jetbrains.kotlin:kotlin-stdlib": [
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains:annotations"
    ],
    "org.jetbrains.kotlin:kotlin-stdlib-jdk7": [
      "org.jetbrains.kotlin:kotlin-stdlib"
    ],
    "org.jetbrains.kotlin:kotlin-stdlib-jdk8": [
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7"
    ],
    "org.ow2.asm:asm-commons": [
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-tree"
    ],
    "org.ow2.asm:asm-tree": [
      "org.ow2.asm:asm"
    ]
  },
  "packages": {
    "com.github.javaparser:javaparser-core": [
      "com.github.javaparser",
      "com.github.javaparser.ast",
      "com.github.javaparser.ast.body",
      "com.github.javaparser.ast.comments",
      "com.github.javaparser.ast.expr",
      "com.github.javaparser.ast.modules",
      "com.github.javaparser.ast.nodeTypes",
      "com.github.javaparser.ast.nodeTypes.modifiers",
      "com.github.javaparser.ast.observer",
      "com.github.javaparser.ast.stmt",
      "com.github.javaparser.ast.type",
      "com.github.javaparser.ast.validator",
      "com.github.javaparser.ast.validator.language_level_validations",
      "com.github.javaparser.ast.validator.language_level_validations.chunks",
      "com.github.javaparser.ast.validator.postprocessors",
      "com.github.javaparser.ast.visitor",
      "com.github.javaparser.javadoc",
      "com.github.javaparser.javadoc.description",
      "com.github.javaparser.metamodel",
      "com.github.javaparser.printer",
      "com.github.javaparser.printer.concretesyntaxmodel",
      "com.github.javaparser.printer.configuration",
      "com.github.javaparser.printer.configuration.imports",
      "com.github.javaparser.printer.lexicalpreservation",
      "com.github.javaparser.printer.lexicalpreservation.changes",
      "com.github.javaparser.quality",
      "com.github.javaparser.resolution",
      "com.github.javaparser.resolution.cache",
      "com.github.javaparser.resolution.declarations",
      "com.github.javaparser.resolution.logic",
      "com.github.javaparser.resolution.model",
      "com.github.javaparser.resolution.model.typesystem",
      "com.github.javaparser.resolution.promotion",
      "com.github.javaparser.resolution.types",
      "com.github.javaparser.resolution.types.parametrization",
      "com.github.javaparser.utils"
    ],
    "com.github.javaparser:javaparser-symbol-solver-core": [
      "com.github.javaparser.symbolsolver",
      "com.github.javaparser.symbolsolver.cache",
      "com.github.javaparser.symbolsolver.core.resolution",
      "com.github.javaparser.symbolsolver.declarations.common",
      "com.github.javaparser.symbolsolver.javaparser",
      "com.github.javaparser.symbolsolver.javaparsermodel",
      "com.github.javaparser.symbolsolver.javaparsermodel.contexts",
      "com.github.javaparser.symbolsolver.javaparsermodel.declarations",
      "com.github.javaparser.symbolsolver.javaparsermodel.declarators",
      "com.github.javaparser.symbolsolver.javassistmodel",
      "com.github.javaparser.symbolsolver.logic",
      "com.github.javaparser.symbolsolver.reflectionmodel",
      "com.github.javaparser.symbolsolver.reflectionmodel.comparators",
      "com.github.javaparser.symbolsolver.resolution",
      "com.github.javaparser.symbolsolver.resolution.naming",
      "com.github.javaparser.symbolsolver.resolution.promotion",
      "com.github.javaparser.symbolsolver.resolution.typeinference",
      "com.github.javaparser.symbolsolver.resolution.typeinference.bounds",
      "com.github.javaparser.symbolsolver.resolution.typeinference.constraintformulas",
      "com.github.javaparser.symbolsolver.resolution.typesolvers",
      "com.github.javaparser.symbolsolver.utils"
    ],
    "com.google.devtools.ksp:symbol-processing-api": [
      "com.google.devtools.ksp",
      "com.google.devtools.ksp.processing",
      "com.google.devtools.ksp.symbol",
      "com.google.devtools.ksp.visitor"
    ],
    "io.micronaut:micronaut-aop": [
      "io.micronaut.aop",
      "io.micronaut.aop.chain",
      "io.micronaut.aop.exceptions",
      "io.micronaut.aop.internal",
      "io.micronaut.aop.internal.intercepted",
      "io.micronaut.aop.kotlin",
      "io.micronaut.aop.util"
    ],
    "io.micronaut:micronaut-context": [
      "io.micronaut.logging",
      "io.micronaut.logging.impl",
      "io.micronaut.runtime",
      "io.micronaut.runtime.beans",
      "io.micronaut.runtime.context",
      "io.micronaut.runtime.context.env",
      "io.micronaut.runtime.context.scope",
      "io.micronaut.runtime.context.scope.refresh",
      "io.micronaut.runtime.converters.time",
      "io.micronaut.runtime.event",
      "io.micronaut.runtime.event.annotation",
      "io.micronaut.runtime.exceptions",
      "io.micronaut.runtime.server",
      "io.micronaut.runtime.server.event",
      "io.micronaut.runtime.server.watch.event",
      "io.micronaut.scheduling",
      "io.micronaut.scheduling.annotation",
      "io.micronaut.scheduling.async",
      "io.micronaut.scheduling.cron",
      "io.micronaut.scheduling.exceptions",
      "io.micronaut.scheduling.executor",
      "io.micronaut.scheduling.instrument",
      "io.micronaut.scheduling.io.watch",
      "io.micronaut.scheduling.io.watch.event",
      "io.micronaut.scheduling.processor"
    ],
    "io.micronaut:micronaut-context-propagation": [
      "io.micronaut.context.propagation.instrument.execution",
      "io.micronaut.context.propagation.slf4j"
    ],
    "io.micronaut:micronaut-core": [
      "io.micronaut.core.annotation",
      "io.micronaut.core.attr",
      "io.micronaut.core.beans",
      "io.micronaut.core.beans.exceptions",
      "io.micronaut.core.bind",
      "io.micronaut.core.bind.annotation",
      "io.micronaut.core.bind.exceptions",
      "io.micronaut.core.cli",
      "io.micronaut.core.cli.exceptions",
      "io.micronaut.core.convert",
      "io.micronaut.core.convert.converters",
      "io.micronaut.core.convert.exceptions",
      "io.micronaut.core.convert.format",
      "io.micronaut.core.convert.value",
      "io.micronaut.core.exceptions",
      "io.micronaut.core.execution",
      "io.micronaut.core.expressions",
      "io.micronaut.core.graal",
      "io.micronaut.core.io",
      "io.micronaut.core.io.buffer",
      "io.micronaut.core.io.file",
      "io.micronaut.core.io.scan",
      "io.micronaut.core.io.service",
      "io.micronaut.core.io.socket",
      "io.micronaut.core.naming",
      "io.micronaut.core.naming.conventions",
      "io.micronaut.core.optim",
      "io.micronaut.core.order",
      "io.micronaut.core.propagation",
      "io.micronaut.core.reflect",
      "io.micronaut.core.reflect.exception",
      "io.micronaut.core.serialize",
      "io.micronaut.core.serialize.exceptions",
      "io.micronaut.core.type",
      "io.micronaut.core.util",
      "io.micronaut.core.util.clhm",
      "io.micronaut.core.util.functional",
      "io.micronaut.core.util.locale",
      "io.micronaut.core.value",
      "io.micronaut.core.version",
      "io.micronaut.core.version.annotation"
    ],
    "io.micronaut:micronaut-core-processor": [
      "io.micronaut.aop.mapper",
      "io.micronaut.aop.writer",
      "io.micronaut.context.visitor",
      "io.micronaut.expressions",
      "io.micronaut.expressions.context",
      "io.micronaut.expressions.parser",
      "io.micronaut.expressions.parser.ast",
      "io.micronaut.expressions.parser.ast.access",
      "io.micronaut.expressions.parser.ast.collection",
      "io.micronaut.expressions.parser.ast.conditional",
      "io.micronaut.expressions.parser.ast.literal",
      "io.micronaut.expressions.parser.ast.operator.binary",
      "io.micronaut.expressions.parser.ast.operator.unary",
      "io.micronaut.expressions.parser.ast.types",
      "io.micronaut.expressions.parser.ast.util",
      "io.micronaut.expressions.parser.compilation",
      "io.micronaut.expressions.parser.exception",
      "io.micronaut.expressions.parser.token",
      "io.micronaut.expressions.util",
      "io.micronaut.inject.annotation",
      "io.micronaut.inject.annotation.internal",
      "io.micronaut.inject.ast",
      "io.micronaut.inject.ast.annotation",
      "io.micronaut.inject.ast.beans",
      "io.micronaut.inject.ast.utils",
      "io.micronaut.inject.beans.visitor",
      "io.micronaut.inject.beans.visitor.persistence",
      "io.micronaut.inject.configuration",
      "io.micronaut.inject.processing",
      "io.micronaut.inject.utils",
      "io.micronaut.inject.visitor",
      "io.micronaut.inject.visitor.util",
      "io.micronaut.inject.writer",
      "io.micronaut.validation.visitor.async"
    ],
    "io.micronaut:micronaut-core-reactive": [
      "io.micronaut.core.async",
      "io.micronaut.core.async.annotation",
      "io.micronaut.core.async.converters",
      "io.micronaut.core.async.processor",
      "io.micronaut.core.async.propagation",
      "io.micronaut.core.async.publisher",
      "io.micronaut.core.async.subscriber"
    ],
    "io.micronaut:micronaut-discovery-core": [
      "io.micronaut.discovery",
      "io.micronaut.discovery.cloud",
      "io.micronaut.discovery.cloud.digitalocean",
      "io.micronaut.discovery.config",
      "io.micronaut.discovery.event",
      "io.micronaut.discovery.exceptions",
      "io.micronaut.discovery.metadata",
      "io.micronaut.discovery.registration",
      "io.micronaut.health"
    ],
    "io.micronaut:micronaut-http": [
      "io.micronaut.http",
      "io.micronaut.http.annotation",
      "io.micronaut.http.bind",
      "io.micronaut.http.bind.binders",
      "io.micronaut.http.body",
      "io.micronaut.http.codec",
      "io.micronaut.http.context",
      "io.micronaut.http.context.event",
      "io.micronaut.http.converters",
      "io.micronaut.http.cookie",
      "io.micronaut.http.exceptions",
      "io.micronaut.http.expression",
      "io.micronaut.http.filter",
      "io.micronaut.http.hateoas",
      "io.micronaut.http.multipart",
      "io.micronaut.http.reactive.execution",
      "io.micronaut.http.resource",
      "io.micronaut.http.simple",
      "io.micronaut.http.simple.cookies",
      "io.micronaut.http.sse",
      "io.micronaut.http.ssl",
      "io.micronaut.http.uri",
      "io.micronaut.http.util",
      "io.micronaut.runtime.http.codec",
      "io.micronaut.runtime.http.scope"
    ],
    "io.micronaut:micronaut-inject": [
      "io.micronaut.context",
      "io.micronaut.context.annotation",
      "io.micronaut.context.banner",
      "io.micronaut.context.bind",
      "io.micronaut.context.condition",
      "io.micronaut.context.converters",
      "io.micronaut.context.env",
      "io.micronaut.context.env.exp",
      "io.micronaut.context.env.yaml",
      "io.micronaut.context.event",
      "io.micronaut.context.exceptions",
      "io.micronaut.context.expressions",
      "io.micronaut.context.i18n",
      "io.micronaut.context.processor",
      "io.micronaut.context.scope",
      "io.micronaut.inject",
      "io.micronaut.inject.annotation",
      "io.micronaut.inject.beans",
      "io.micronaut.inject.provider",
      "io.micronaut.inject.proxy",
      "io.micronaut.inject.qualifiers",
      "io.micronaut.inject.validation"
    ],
    "io.micronaut:micronaut-inject-kotlin": [
      "io.micronaut.kotlin.processing",
      "io.micronaut.kotlin.processing.annotation",
      "io.micronaut.kotlin.processing.beans",
      "io.micronaut.kotlin.processing.visitor"
    ],
    "io.micronaut:micronaut-retry": [
      "io.micronaut.retry",
      "io.micronaut.retry.annotation",
      "io.micronaut.retry.event",
      "io.micronaut.retry.exception",
      "io.micronaut.retry.intercept"
    ],
    "io.projectreactor:reactor-core": [
      "reactor.adapter",
      "reactor.core",
      "reactor.core.observability",
      "reactor.core.publisher",
      "reactor.core.scheduler",
      "reactor.util",
      "reactor.util.annotation",
      "reactor.util.concurrent",
      "reactor.util.context",
      "reactor.util.function",
      "reactor.util.retry"
    ],
    "jakarta.annotation:jakarta.annotation-api": [
      "jakarta.annotation",
      "jakarta.annotation.security",
      "jakarta.annotation.sql"
    ],
    "jakarta.inject:jakarta.inject-api": [
      "jakarta.inject"
    ],
    "jakarta.validation:jakarta.validation-api": [
      "jakarta.validation",
      "jakarta.validation.bootstrap",
      "jakarta.validation.constraints",
      "jakarta.validation.constraintvalidation",
      "jakarta.validation.executable",
      "jakarta.validation.groups",
      "jakarta.validation.metadata",
      "jakarta.validation.spi",
      "jakarta.validation.valueextraction"
    ],
    "org.jetbrains.kotlin:kotlin-stdlib": [
      "kotlin",
      "kotlin.annotation",
      "kotlin.collections",
      "kotlin.collections.builders",
      "kotlin.collections.jdk8",
      "kotlin.collections.unsigned",
      "kotlin.comparisons",
      "kotlin.concurrent",
      "kotlin.contracts",
      "kotlin.coroutines",
      "kotlin.coroutines.cancellation",
      "kotlin.coroutines.intrinsics",
      "kotlin.coroutines.jvm.internal",
      "kotlin.enums",
      "kotlin.experimental",
      "kotlin.internal",
      "kotlin.internal.jdk7",
      "kotlin.internal.jdk8",
      "kotlin.io",
      "kotlin.io.encoding",
      "kotlin.io.path",
      "kotlin.jdk7",
      "kotlin.js",
      "kotlin.jvm",
      "kotlin.jvm.functions",
      "kotlin.jvm.internal",
      "kotlin.jvm.internal.markers",
      "kotlin.jvm.internal.unsafe",
      "kotlin.jvm.jdk8",
      "kotlin.jvm.optionals",
      "kotlin.math",
      "kotlin.properties",
      "kotlin.random",
      "kotlin.random.jdk8",
      "kotlin.ranges",
      "kotlin.reflect",
      "kotlin.sequences",
      "kotlin.streams.jdk8",
      "kotlin.system",
      "kotlin.text",
      "kotlin.text.jdk8",
      "kotlin.time",
      "kotlin.time.jdk8"
    ],
    "org.jetbrains:annotations": [
      "org.intellij.lang.annotations",
      "org.jetbrains.annotations"
    ],
    "org.ow2.asm:asm": [
      "org.objectweb.asm",
      "org.objectweb.asm.signature"
    ],
    "org.ow2.asm:asm-commons": [
      "org.objectweb.asm.commons"
    ],
    "org.ow2.asm:asm-tree": [
      "org.objectweb.asm.tree"
    ],
    "org.reactivestreams:reactive-streams": [
      "org.reactivestreams"
    ],
    "org.slf4j:slf4j-api": [
      "org.slf4j",
      "org.slf4j.event",
      "org.slf4j.helpers",
      "org.slf4j.spi"
    ]
  },
  "repositories": {
    "https://maven.google.com/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://repo1.maven.org/maven2/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://packages.confluent.io/maven/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://jitpack.io/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://repo.kotlin.link/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://maven.pkg.jetbrains.space/mipt-npm/p/sci/maven/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ],
    "https://mvnrepository.com/artifact/": [
      "com.github.javaparser:javaparser-core",
      "com.github.javaparser:javaparser-symbol-solver-core",
      "com.google.devtools.ksp:symbol-processing-api",
      "io.micronaut:micronaut-aop",
      "io.micronaut:micronaut-context",
      "io.micronaut:micronaut-context-propagation",
      "io.micronaut:micronaut-core",
      "io.micronaut:micronaut-core-processor",
      "io.micronaut:micronaut-core-reactive",
      "io.micronaut:micronaut-discovery-core",
      "io.micronaut:micronaut-http",
      "io.micronaut:micronaut-inject",
      "io.micronaut:micronaut-inject-kotlin",
      "io.micronaut:micronaut-retry",
      "io.micronaut:micronaut-runtime",
      "io.projectreactor:reactor-core",
      "jakarta.annotation:jakarta.annotation-api",
      "jakarta.inject:jakarta.inject-api",
      "jakarta.validation:jakarta.validation-api",
      "org.jetbrains.kotlin:kotlin-stdlib",
      "org.jetbrains.kotlin:kotlin-stdlib-common",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk7",
      "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
      "org.jetbrains:annotations",
      "org.ow2.asm:asm",
      "org.ow2.asm:asm-commons",
      "org.ow2.asm:asm-tree",
      "org.reactivestreams:reactive-streams",
      "org.slf4j:slf4j-api"
    ]
  },
  "version": "2"
}
